[versions]
# Android
accompanist = "0.32.0"
android-viewmodel-kts = "2.7.0"
desugar-jdk-libs = "2.0.4"
ksp = "1.9.23-1.0.19"
# Compose
compose = "1.6.1"
activity-compose = "1.8.2"
androidx-compose = "1.6.1"
androidx-compose3 = "1.2.0"
androidx-compose-compiler = "1.5.10"
androidx-compose-ui = "1.6.1"
androidxComposeBom = "2024.02.00"
androidxPagingCompose = "3.3.0-alpha02"
#arrow
arrow = "1.2.0"
# ArkIvanov
arkivanov-decompose = "3.0.0-alpha09"
arkivanov-essenty = "2.0.0-alpha07"
arkivanov-mvi = "4.0.0-alpha02"

#coil
coil = "3.0.0-alpha05"
# Koin
koin = "3.5.2-RC1"
koinCompose = "3.4.5"
koinAnnotations = "1.3.0"
# Kotlin
kotlin = "1.9.23"
kotlinx-coroutines = "1.8.0"
kotlinx-datetime = "0.4.0"
kotlinx-serialization = "1.6.2"
#Kotest
kotest = "5.8.0"
# Ktor
ktor = "2.3.8"
ktorfitLib = "1.11.0"
# Log
napier = "2.6.1"
# Gradle
plugin-android = "8.2.0"
gradleVersionsPlugin = "0.50.0"
resourcesGenerator = "0.23.0"
versionCatalogUpdatePlugin = "0.8.1"
# Static analyze code
detekt = "1.23.3"
ktlint = "0.50.0"
# Выше нельзя пока, ломаются правила
spotless = "6.21.0"
ktlint_jlleitschuh = "11.5.0"
# Database
sqldelight = "2.0.1"
# Moko
moko-resources = "0.24.0-alpha-5"
moko-media = "0.11.0"
moko-permissions = "0.17.0"
uiToolingPreviewAndroid = "1.6.0"
multiplatform-settings = "1.0.0"


[libraries]
# Android
accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
accompanist-swiperefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
android-viewmodel-kts = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "android-viewmodel-kts" }
desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar-jdk-libs" }
# Compose
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose-ui" }
androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test" }
androidx-compose-ui-test-junit = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose-ui" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidxComposeBom" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose" }
androidx-compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx-compose" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidx-compose3" }
androidx-compose-material3-window-size = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "androidx-compose3" }
androidx-compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime" }

# ArkIvanov
arkivanov-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "arkivanov-decompose" }
arkivanov-decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "arkivanov-decompose" }
arkivanov-essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "arkivanov-essenty" }
arkivanov-essenty-lifecycle-coroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "arkivanov-essenty" }
arkivanov-essenty-instance-keeper = { module = "com.arkivanov.essenty:instance-keeper", version.ref = "arkivanov-essenty" }
arkivanov-mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin ", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-logging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-timetravel = { module = "com.arkivanov.mvikotlin:mvikotlin-timetravel", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-rx = { module = "com.arkivanov.mvikotlin:rx", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-extensions-reaktive = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-reaktive", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-extensions-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "arkivanov-mvi" }

#arrow
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }


#coil
coil-bom = { module = "io.coil-kt.coil3:coil-bom", version = "3.0.0-alpha06" }
coil-core = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil" }


# Ktor
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfitLib" }
ktorfit-ksp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfitLib" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotations" }
koin-kspCompiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinAnnotations" }
# Kotlin
kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.23.1"
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.5.0"
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-annotation = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
# Kotest
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-framework = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-junit = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }



# Database
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-paging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
# Logging
timber = "com.jakewharton.timber:timber:5.0.1"
kermit = "co.touchlab:kermit:2.0.2"

store5 = { module = "org.mobilenativefoundation.store:store5", version = "5.0.0-beta02" }

# Moko
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }
moko-resources-test = { module = "dev.icerock.moko:resources-test", version.ref = "moko-resources" }
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "resourcesGenerator" }
moko-graphics = "dev.icerock.moko:graphics:0.9.0"
moko-media-compose = { module = "dev.icerock.moko:media-compose", version.ref = "moko-media" }
moko-permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "moko-permissions" }

# Shared preferences
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }

# Plugins
plugin-android = { module = "com.android.tools.build:gradle", version.ref = "plugin-android" }
gradle_versions_plugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradleVersionsPlugin" }
gradlePlugins-kotlin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
#ksp-gradle
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
plugin-kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
versionCatalogUpdatePlugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradleVersionsPlugin" }
# Static analyze code
detekt_plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
ktlint_jlleitschuh_plugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint_jlleitschuh" }
spotless_plugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
# Compose Multiplatform Plugin
gradlePlugins-jb-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }

[bundles]
plugins = [
    "plugin-android",
    "gradlePlugins-kotlin-core"
]

mvi = [
    "arkivanov-essenty-lifecycle",
    "arkivanov-mvikotlin",
    "arkivanov-mvikotlin-main",
    "arkivanov-mvikotlin-timetravel",
    "arkivanov-mvikotlin-extensions-coroutines",
    "arkivanov-mvikotlin-logging"
]


android-compose = [
    "activity-compose",
    "androidx-compose-ui",
    "androidx-compose-ui-tooling",
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-foundation",
    "androidx-compose-material",
    "androidx-compose-material3",
    "androidx-compose-material3-window-size"
]

coil = ["coil-core", "coil-compose", "coil-network-okhttp"]

[plugins]
#detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
#gradleVersionsPlugin = { id = "com.github.ben-manes.versions", version.ref = "gradleVersionsPlugin" }
#ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint_jlleitschuh" }
#org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
#spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
#versionCatalogUpdatePlugin = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdatePlugin" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfitLib" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
kotest = { id = "io.kotest.multiplatform", version.ref = "kotest" }
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }

# Plugins defined by this project
custom-android-application = "custom.android.application:unspecified"
custom-android-library = "custom.androidMultiplatformLibrary:unspecified"
custom-android-codequality = "custom.android.codequality:unspecified"
custom-multiplatform-library = "custom.multiplatformLibrary:unspecified"
custom-koin-plugin = "custom.koinPlugin:unspecified"
